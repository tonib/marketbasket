
REQUIRES Python 3.7+
Tested version: Python 3.8.2


TODO:
Test LSTM
Try to add sequences reversed as input
gather probably can be replaced by boolean_mask, anywhere
Generate text file with train samples, to debug
Conv model: Try to stack convolutional layers + pooling
* Convert to multi-binary classifier: NO. It performs worse (Try it again)
* Remove use of ragged tensors...

Transformer / GPT info:
https://www.tensorflow.org/tutorials/text/transformer
https://github.com/tensorflow/tensorflow/issues/42848
https://lilianweng.github.io/lil-log/2020/04/07/the-transformer-family.html
https://keras.io/examples/generative/text_generation_with_miniature_gpt/
https://jonathanbgn.com/gpt2/2020/01/20/slogan-generator.html


SEQUENTIAL:
Score: 72009 of 150799
Ratio: 0.47751642915403947
Total time: 4.8768956661224365


See https://stackoverflow.com/questions/50166420/how-to-concatenate-2-embedding-layers-with-mask-zero-true-in-keras2-0 for multiple
masked inputs (for future projects)

Requisites:
tensorflow==2.3

Installation (Linux):
python3 -m venv --system-site-packages ./venv-tf-2.3
source venv-tf-2.3/bin/activate
pip install --upgrade pip

Installation (Windows)
# Install " Microsoft Visual C++ Redistributable for Visual Studio 2015, 2017 and 2019" from https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads
C:\Users\ToniB\AppData\Local\Programs\Python\Python38\python.exe -m venv --system-site-packages .\venv
.\venv\Scripts\activate
python.exe -m pip install --upgrade pip
# In VM, to confirm AVX is available, install https://downloadcenter.intel.com/es/download/19792/Intel-Processor-Diagnostic-Tool and run avx.exe

Install requeriments (both)
pip install tensorflow==2.3
pip install requests # Only needed to test tf serving performance
pip install focal-loss # https://github.com/artemmavrin/focal-loss
pip install flask # Flask server (serving without TF Serving) requirements

Test Tensorflow installation:
python -c "import tensorflow as tf;print(tf.reduce_sum(tf.random.normal([1000, 1000])))"

Flask server in IIS (Windows)
# See https://gist.github.com/dvas0004/3d26c25d614c54ecdf296003d68cddaa
pip install wfastcgi
# In "Turn Windows features on or off" be sure Web Server > Application Development > CGI is selected
wfastcgi-enable # This must to be run with elevated privileges (administrator)
# Output:
# Cambios de configuraci�n aplicados a la secci�n "system.webServer/fastCgi" para "MACHINE/WEBROOT/APPHOST" en la ruta de acceso de confirmaci�n de configuraci�n "MACHINE/WEBROOT/APPHOST"
# "d:\kbases\subversion\marketbasket\marketbasket\venv\scripts\python.exe|d:\kbases\subversion\marketbasket\marketbasket\venv\lib\site-packages\wfastcgi.py" can now be used as a FastCGI script processor
# Create a new web site in IIS
# Change user to run the new site to an user with permissions
# Set permissions to the site directory
# Set user in the application group with the right permissions
# The setup time for the python process can be really large. To setup the site to ALWAYS have the python process running see https://stackoverflow.com/questions/55754555/django-run-constantly-running-background-task-on-iis-hosted-application
# Dear lord... See also https://galleryserverpro.com/eliminate-startup-delay-in-your-galleries-using-application-initialization/ (Application Initialization in Windows Server 2012 and higher (IIS 8+))

Show exported model
saved_model_cli show --dir model/serving_model/1 --all
saved_model_cli show --dir model/serving_model/1 --tag_set serve --signature_def predict

Install serving
sudo apt install docker.io
sudo docker pull tensorflow/serving

sudo docker run -p 8501:8501 --mount type=bind,source=/home/toni/proyectos/tensorflow/marketBasket/model/serving_model,target=/models/basket -e MODEL_NAME=basket -t tensorflow/serving

curl -d '{"signature_name":"predict", "inputs": { "customer_label": "5909", "item_labels": ["21131", "221554"], "n_results": 10 } }' -X POST "http://localhost:8501/v1/models/basket:predict"

Serving time:
Total time: 0.0029418468475341797

Kill all containers:
sudo docker container kill $(sudo docker ps -q)

Troubles starting Hyper-V service in Windows: See https://github.com/docker/for-win/issues/3597#issuecomment-474949164 (worked for me)
Troubles starting Docker: Try this: cmd.exe > menu > properties > disable legacy console

Windows:
D:\kbases\subversion\marketBasket-tf>docker run -p 8501:8501 --mount type=bind,source=C:\xxxxxx\model\serving_model,target=/models/basket -e MODEL_NAME=basket -t tensorflow/serving
C:\xxxxx\venv\Scripts\activate.ps1 (or .bat)

